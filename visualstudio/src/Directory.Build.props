<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<!-- Set startup process to always start with the experimental instance and logging enabled -->
	<PropertyGroup>
		<StartAction>Program</StartAction>
		<StartProgram>$(DevEnvDir)devenv.exe</StartProgram>
		<StartArguments>/rootSuffix Exp</StartArguments>
	</PropertyGroup>

	<PropertyGroup Condition="'$(LocEnabled)' == 'true'">
		<!-- LocType and LocLanguages are properties used in MicroBuild props to set internal values,
		so we set them here based on the LocMode and LocLang props set from outside (via Global or Environment properties) -->
		<LocType>full</LocType>
		<LocLanguages>VS</LocLanguages>
		<LocProject>All</LocProject>
		<!-- CopySatelliteDllsToStandardNETPaths is a MicroBuild property that should be True in order to copy the generated statellite assemblies to the default .net locations -->
		<CopySatelliteDllsToStandardNETPaths>True</CopySatelliteDllsToStandardNETPaths>
	</PropertyGroup>

	<!-- CI properties for VSTS -->
	<PropertyGroup>
		<CI Condition="'$(CI)' == '' and '$(TF_BUILD)' == 'true'">true</CI>
		<PR Condition="'$(PR)' == '' and '$(BUILD_BUILDREASON)' == 'PullRequest'">true</PR>
		<PR Condition="'$(PR)' == '' and $([System.Text.RegularExpressions.Regex]::IsMatch('$(BUILD_SOURCEBRANCH)', 'refs/pull/\d+/merge'))">true</PR>

		<GitBranch Condition="'$(PR)' == 'true'">$([System.Text.RegularExpressions.Regex]::Match($(BUILD_SOURCEBRANCH), '(?&lt;=refs/pull/)\d+(?=/merge)'))</GitBranch>
		<GitBranch Condition="'$(GitBranch)' != ''">pr$(GitBranch)</GitBranch>
		<GitBranch Condition="'$(GitBranch)' == ''">$(BUILD_SOURCEBRANCHNAME)</GitBranch>
		
		<GitSha>$(BUILD_SOURCEVERSION)</GitSha>
		<GitCommit Condition="'$(GitSha)' != ''">$(GitSha.Substring(0, 7))</GitCommit>

		<GitVersionFile>GitInfo.txt</GitVersionFile>
		<GitCommitsRelativeTo>$([MSBuild]::GetDirectoryNameOfFileAbove ('$(MSBuildThisFileDirectory)', '$(GitVersionFile)'))\</GitCommitsRelativeTo>

		<IsExperimental>false</IsExperimental>
		<IsExperimental Condition="'$(CI)' != 'true'">true</IsExperimental>
		<IsSystemComponent>true</IsSystemComponent>
		<IsSystemComponent Condition="'$(CI)' != 'true'">false</IsSystemComponent>
	</PropertyGroup>
</Project>