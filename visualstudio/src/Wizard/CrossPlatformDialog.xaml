<ui:DialogBase x:Class="Xamarin.Templates.Wizards.CrossPlatformDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Xamarin.Templates.Wizards"
        xmlns:res="clr-namespace:Xamarin.Templates.Properties"
        xmlns:ui="clr-namespace:Xamarin.Templates"
        mc:Ignorable="d"
        Title="New Cross Platform App" Height="410" Width="755" ResizeMode="NoResize" ShowInTaskbar="False">
    <Window.DataContext>
        <local:XPlatViewModel />
    </Window.DataContext>
    <Window.Resources>
        <local:AzureEnabledToVisibilityConverter x:Key="AzureConverter" />
    </Window.Resources>
    <Grid Margin="5,5,5,3">
        <Grid.Resources>
            <DataTemplate x:Key="ItemTemplate" >
                <StackPanel Orientation="Vertical" Margin="1">
                    <Image Width="32" Height="32" Stretch="Fill" Source="{Binding Icon}"  Margin="0,5,0,0" VerticalAlignment="Top"/>
                    <TextBlock MinWidth="75" MaxWidth="85" TextAlignment="Center" TextWrapping="Wrap" Margin="2,5,2,5" Text="{Binding Name}" />
                </StackPanel>
            </DataTemplate>
            <Style TargetType="{x:Type ListViewItem}" x:Key="ListViewStyleTemplates" >
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                <Setter Property="AutomationProperties.Name" Value="{Binding Name}" />
                <Setter Property="AutomationProperties.HelpText" Value="{Binding Description}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                                <Grid>
                                    <ContentPresenter x:Name="contentPresenter"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      Visibility="Visible"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Top"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsFocused" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsFocused" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.8*" />
            <ColumnDefinition Width="1" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <ListView Grid.Row="1" Grid.Column="0" Margin="10,5" SelectionMode="Single" ItemContainerStyle="{StaticResource ListViewStyleTemplates}" ItemTemplate="{StaticResource ItemTemplate}" SelectedItem="{Binding SelectedTemplate}" ItemsSource="{Binding Templates}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" x:Name="lvTemplates">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>
        <Label Grid.Column="0" Grid.Row="0" Content="{x:Static res:Resources.SelectATemplate}" Margin="5,0,0,0" />
        <StackPanel Grid.Column="2" Grid.Row="2">
            <Label Content="{x:Static res:Resources.MicrosoftAzure}" Visibility="{Binding IsAzureEnabled, Converter={StaticResource AzureConverter}}" FontWeight="Bold" />
            <CheckBox Visibility="{Binding IsAzureEnabled, Converter={StaticResource AzureConverter}}" Margin="5,5" IsChecked="{Binding IsAzureSelected}">
                <TextBlock Text="{x:Static res:Resources.HostInTheCloud}" TextWrapping="Wrap"/>
            </CheckBox>
        </StackPanel>
        <Grid Grid.Column="0" Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" >
                <Label Content="{x:Static res:Resources.Platforms}" Margin="5,2" FontWeight="Bold" />
                <CheckBox Content="{x:Static res:Resources.Android}" Margin="12,2" IsChecked="{Binding IsAndroidSelected}" IsEnabled="{Binding IsAndroidEnabled}" />
                <CheckBox Content="{x:Static res:Resources.iOS}" Margin="12,2" IsChecked="{Binding IsIOSSelected}" IsEnabled="{Binding IsIOSEnabled}" />
                <CheckBox Content="{x:Static res:Resources.UWP}" Margin="12,2" IsChecked="{Binding IsUWPSelected}" IsEnabled="{Binding IsUWPEnabled}" />
            </StackPanel>
            <StackPanel Grid.Column="1">
                <StackPanel Orientation="Horizontal" >
                    <Label Content="{x:Static res:Resources.Sharing}" Margin="5,2" FontWeight="Bold" />
                    <TextBlock FontWeight="Bold" Margin="-6,0" VerticalAlignment="Center">
                        <Hyperlink NavigateUri="https://aka.ms/xamarin-code-sharing"
                                   RequestNavigate="CodeSharingStrategy_Navigate">
                            ?
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>
                <RadioButton Content="{x:Static res:Resources.SharedProjects}" Margin="7,2" IsChecked="{Binding IsSharedSelected}" IsEnabled="{Binding IsSharingEnabled}"/>
                <RadioButton Content="{x:Static res:Resources.PCL}" Margin="7,2" IsChecked="{Binding IsPCLSelected}" IsEnabled="{Binding IsSharingEnabled}" />
            </StackPanel>
        </Grid>
        <TextBlock Grid.Row="1" Grid.Column="2" Margin="5" TextWrapping="Wrap" TextAlignment="Left" Text="{Binding SelectedItem.Description, ElementName=lvTemplates}"/>
        <Separator Grid.Row="1" Grid.Column="2" Margin="0,0,0,5" VerticalAlignment="Bottom" />
        <StackPanel Grid.Row="3" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="OK" IsDefault="True" Margin="5" MinWidth="80" Click="button_Click" IsEnabled="{Binding IsOkEnabled}"/>
            <Button Content="Cancel" IsCancel="True" Margin="5" MinWidth="80"/>
        </StackPanel>
    </Grid>
</ui:DialogBase>
